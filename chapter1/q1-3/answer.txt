三つの数を引数としてとり、大きい二つの数の二乗の和を返す手続きを定義せよ。


(define (f a b c)
    (if (> a b)
        (if (> b c)
            (+ a b)
            (+ a c))
        (if (> a c)
            (+ b a)
            (+ b c))))
(X)

---

(define (f a b c)
    (if (> a b)
        (if (> b c)
            (+ (* a a) (* b b))
            (+ (* a a) (* c c))
        (if (> a c)
            (+ (* b b) (* a a))
            (+ (* b b) (* c c)))))

(define (square a) (* a a))

(define (f a b c)
    (if (> a b)
        (if (> b c)
            (+ (square a) (square b))
            (+ (square a) (square c)))
        (if (> a c)
            (+ (square b) (square a))
            (+ (square b) (square c)))))

Using 'cond' version.

(define (f a b c)
    (cond (and (>= a c) (>= b c)) (+ (square a) (square b))
          (and (>= a b) (>= c b)) (+ (square a) (square c))
          (and (>= b a) (<= c a)) (+ (square b) (square c))))
